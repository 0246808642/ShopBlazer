// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopBlazor.Api.Data;

#nullable disable

namespace ShopBlazor.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopBlazor.Api.Entities.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2L,
                            UserId = "2"
                        });
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IconCSS = "fas fa-spa",
                            Name = "Beleza"
                        },
                        new
                        {
                            Id = 2L,
                            IconCSS = "fas fa-couch",
                            Name = "Moveis"
                        },
                        new
                        {
                            Id = 3L,
                            IconCSS = "fas fa-headphones",
                            Name = "Eletronicos"
                        },
                        new
                        {
                            Id = 4L,
                            IconCSS = "fas fa-shoe-prints",
                            Name = "Calcados"
                        });
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.ItemCart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CartId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("ItemCarts");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Description = "Um kit fornecido pela Natura, contendo produtos para cuidados com a pele",
                            ImageUrl = "/Imagens/Beleza/Beleza1.png",
                            Name = "Glossier - Beleza Kit",
                            Price = 100m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Description = "Um kit fornecido pela Curology, contendo produtos para cuidados com a pele",
                            ImageUrl = "/Imagens/Beleza/Beleza2.png",
                            Name = "Curology - Kit para Pele",
                            Price = 50m,
                            Quantity = 45
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Description = "Um kit fornecido pela Glossier, contendo produtos para cuidados com a pele",
                            ImageUrl = "/Imagens/Beleza/Beleza3.png",
                            Name = "Óleo de Coco Orgânico",
                            Price = 20m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 1L,
                            Description = "Um kit fornecido pela Curology, contendo produtos para cuidados com a pele",
                            ImageUrl = "/Imagens/Beleza/Beleza4.png",
                            Name = "Schwarzkopf - Kit de cuidados com a pele e cabelo",
                            Price = 50m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 1L,
                            Description = "Kit de cuidados com a pele, contendo produtos para cuidados com a pele e cabelos",
                            ImageUrl = "/Imagens/Beleza/Beleza5.png",
                            Name = "Kit de cuidados com a pele",
                            Price = 30m,
                            Quantity = 85
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 3L,
                            Description = "Air Pods - fones de ouvido sem fio intra-auriculares",
                            ImageUrl = "/Imagens/Eletronicos/eletronico1.png",
                            Name = "Fones de ouvidos",
                            Price = 100m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 3L,
                            Description = "Fones de ouvido dourados na orelha - esses fones de ouvido não são sem fio",
                            ImageUrl = "/Imagens/Eletronicos/eletronico2.png",
                            Name = "Fones de ouvido dourados",
                            Price = 40m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Description = "Fones de ouvido pretos na orelha - esses fones de ouvido não são sem fio",
                            ImageUrl = "/Imagens/Eletronicos/eletronico3.png",
                            Name = "Fones de ouvido pretos",
                            Price = 40m,
                            Quantity = 300
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 3L,
                            Description = "Câmera Digital Sennheiser - Câmera digital de alta qualidade fornecida pela Sennheiser - inclui tripé",
                            ImageUrl = "/Imagens/Eletronicos/eletronico4.png",
                            Name = "Câmera digital Sennheiser com tripé",
                            Price = 600m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 3L,
                            Description = "Canon Digital Camera - Câmera digital de alta qualidade fornecida pela Canon",
                            ImageUrl = "/Imagens/Eletronicos/eletronico5.png",
                            Name = "Câmera Digital Canon",
                            Price = 500m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 3L,
                            Description = "Gameboy - Fornecido por Nintendo",
                            ImageUrl = "/Imagens/Eletronicos/tecnologia6.png",
                            Name = "Nintendo Gameboy",
                            Price = 100m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 12L,
                            CategoryId = 2L,
                            Description = "Cadeira de escritório em couro preto muito confortável",
                            ImageUrl = "/Imagens/Moveis/moveis1.png",
                            Name = "Cadeira de escritório de couro preto",
                            Price = 50m,
                            Quantity = 212
                        },
                        new
                        {
                            Id = 13L,
                            CategoryId = 2L,
                            Description = "Cadeira de escritório em couro rosa muito confortável",
                            ImageUrl = "/Imagens/Moveis/moveis2.png",
                            Name = "Cadeira de escritório de couro rosa",
                            Price = 50m,
                            Quantity = 112
                        },
                        new
                        {
                            Id = 14L,
                            CategoryId = 2L,
                            Description = "Poltrona muito confortável",
                            ImageUrl = "/Imagens/Moveis/moveis3.png",
                            Name = "Espreguiçadeira",
                            Price = 70m,
                            Quantity = 90
                        },
                        new
                        {
                            Id = 15L,
                            CategoryId = 2L,
                            Description = "Poltrona prateada muito confortável",
                            ImageUrl = "/Imagens/Moveis/moveis4.png",
                            Name = "Silver Lounge Chair",
                            Price = 120m,
                            Quantity = 95
                        },
                        new
                        {
                            Id = 16L,
                            CategoryId = 2L,
                            Description = "Abajur de mesa de porcelana branco e azul",
                            ImageUrl = "/Imagens/Moveis/moveis6.png",
                            Name = "Luminária de mesa de porcelana",
                            Price = 15m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 17L,
                            CategoryId = 2L,
                            Description = "Abajur de mesa de escritório",
                            ImageUrl = "/Imagens/Moveis/moveis7.png",
                            Name = "Office Table Lamp",
                            Price = 20m,
                            Quantity = 73
                        },
                        new
                        {
                            Id = 18L,
                            CategoryId = 4L,
                            Description = "Tênis Puma confortáveis na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado1.png",
                            Name = "Tênis Puma",
                            Price = 100m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 19L,
                            CategoryId = 4L,
                            Description = "Tênis coloridos - disponíveis na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado2.png",
                            Name = "Tênis Colodiros",
                            Price = 150m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 20L,
                            CategoryId = 4L,
                            Description = "Tênis Nike azul - disponível na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado3.png",
                            Name = "Tênis Nike Azul",
                            Price = 200m,
                            Quantity = 70
                        },
                        new
                        {
                            Id = 21L,
                            CategoryId = 4L,
                            Description = "Treinadores Hummel coloridos - disponíveis na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado4.png",
                            Name = "Tênis Hummel Coloridos",
                            Price = 120m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 22L,
                            CategoryId = 4L,
                            Description = "Tênis Nike vermelho - disponível na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado5.png",
                            Name = "Tênis Nike Vermelho",
                            Price = 200m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 23L,
                            CategoryId = 4L,
                            Description = "Sandálias Birkenstock - disponíveis na maioria dos tamanhos",
                            ImageUrl = "/Imagens/Calcados/calcado6.png",
                            Name = "Sandálidas Birkenstock",
                            Price = 50m,
                            Quantity = 150
                        });
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CartId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            NameUser = "Caique"
                        },
                        new
                        {
                            Id = 2L,
                            NameUser = "Isabela"
                        });
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.ItemCart", b =>
                {
                    b.HasOne("ShopBlazor.Api.Entities.Cart", "Cart")
                        .WithMany("Itens")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopBlazor.Api.Entities.Product", "Product")
                        .WithMany("Itens")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Product", b =>
                {
                    b.HasOne("ShopBlazor.Api.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.User", b =>
                {
                    b.HasOne("ShopBlazor.Api.Entities.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Cart", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopBlazor.Api.Entities.Product", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
